@page "{handler?}"
@model SERVERAPI.Pages.RanchAnimals.CreateEdit

@{
    //Layout = Model.Data.Id == null ? "_Layout" : null;
    Layout = "_Layout";
}

@*

    Host this form in a Partial View or a ViewComponent to resuse the form in the Razor View

        Have the razor view pass the Model to the Partial/ViewComponent, so it can do all the
        managing of the CQRS efforts.

        The Index page will call the Popup using the Partial

        Need a strategy to create to reuse the Javascript

        Essentially we want the CreateEdit

*@
<div class="header-height"></div>

<br />
<br />
<div class="container">
    <div class="form-box">
        <div class="form-box-header clearfix">
            <div class="form-box-heading">Add Animals - Razor page</div>
        </div>
        <form method="post" class="form-box-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-box-fields">
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label for="ddlSubType">Cattle Type</label>
                        <select class="form-control" asp-for="@Model.Data.CattleSubTypeId"
                                asp-items="@Model.Data.CattleSubTypeOptions" id="ddlSubType"
                                onchange="SetCattleSubTypeName(this.selectedOptions[0])">
                            <option value=0>Select Cattle Type</option>
                        </select>
                        <input id="CattleSubTypeName" asp-for="@Model.Data.CattleSubTypeName" type="hidden" />
                        @Html.ValidationMessageFor(model => model.Data.CattleSubTypeId)
                    </div>
                    <div class="form-group col-sm-4">
                        <label for="averageAnimalNumber">Average Animal Number on Farm</label>
                        <input class="form-control" asp-for="@Model.Data.AverageAnimalNumber"
                               id="averageAnimalNumber" type="number" placeholder="@Model.Data.Placehldr" />
                        @Html.ValidationMessageFor(model => model.Data.AverageAnimalNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label for="isManureCollected">Do you pile or collect manure from these animals?</label>
                        <div class="form-group" role="radiogroup" aria-labelledby="labelisManureCollected">
                            <label style="padding-right: 20px">
                                <input asp-for="@Model.Data.IsManureCollected" type="radio" value="true"
                                       id="rbIsManureCollectedYes" onchange="IsManureCollectedChanged(true)" /> Yes
                            </label>
                            <label>
                                <input asp-for="@Model.Data.IsManureCollected" type="radio" value="false"
                                       id="rbIsManureCollectedNo" onchange="IsManureCollectedChanged(false)" /> No
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">

                    @{
                        var displayDuration = "none";
                    }
                    @if (Model.Data.IsManureCollected)
                    {
                        displayDuration = "inline";
                    }
                    <div class="row" id="durationValue" style="display:@displayDuration">
                        <div class="form-group col-sm-2">
                            <label for="txtDuration">Duration</label>
                        </div>
                        <div class="form-group col-sm-2">
                            <input class="form-control" asp-for="@Model.Data.DurationDays" id="durationDays" type="text" />
                            @Html.ValidationMessageFor(model => model.Data.DurationDays)
                        </div>
                        <div class="form-group col-sm-4">
                            days
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn" type="button" data-dismiss="modal">Cancel</button>
                    <input class="btn btn-primary" type="submit" value="Save" />
                </div>
            </div>
            @Html.HiddenFor(x => x.Data.ButtonPressed)
            @Html.HiddenFor(x => x.Data.AnimalId)
            @Html.HiddenFor(x => x.Data.AnimalName)
        </form>
    </div>
</div>

@section Scripts {
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@

    <script type="text/javascript">
        function IsManureCollectedChanged(value) {
            if (value) {
                $('#durationValue').show();
            } else {
                $('#durationValue').hide();
            }
        }

        function SetCattleSubTypeName(selectObject) {
            var text = selectObject.text;
            $('#CattleSubTypeName').val(text);
        }
    </script>
}